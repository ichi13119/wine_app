import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import gql from 'graphql-tag';

import { urqlClient } from '../lib/urql';

import styles from '../styles/Home.module.css';

type Props = {
  posts: {
    id: string;
    title: string;
  }[];
};

const Home: NextPage<Props> = ({ posts }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Hello GraphQL</h1>

        <ul className={styles.grid}>
          {posts?.map((post) => (
            <li className={styles.title} key={post.id}>
              id: {post.id} title: {post.title}
            </li>
          ))}
        </ul>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  const client = urqlClient();

  const postsQuery = gql`
    query {
      posts {
        id
        title
      }
    }
  `;

  const result = await client.query(postsQuery, {}).toPromise();

  return {
    props: {
      posts: result.data.posts,
    },
  };
};

export default Home;
